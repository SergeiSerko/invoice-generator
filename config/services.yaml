# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # chain-of-responsibility entry point
    App\Service\Order\Resolver\ChainedOrderResolver:
        arguments:
            - '@app.order_handler'

    # input validation
    App\Service\Order\Handler\OrderPlacementValidatorHandler:
        tags:
            - { name: 'order_handler', priority: 8 }

    # product data (tax, price, etc) retrieval
    App\Service\Order\Handler\OrderProductDataRetrieverHandler:
        tags:
            - { name: 'order_handler', priority: 7 }

    # invoice pre-calc
    App\Service\Order\Handler\OnBeforeInvoiceCalculatorHandler:
        tags:
            - { name: 'order_handler', priority: 6 }

    # invoice calc
    App\Service\Order\Handler\InvoiceCalculatorHandler:
        tags:
            - { name: 'order_handler', priority: 5 }

    # invoice post-calc
    App\Service\Order\Handler\OnAfterInvoiceCalculatorHandler:
        tags:
            - { name: 'order_handler', priority: 4 }

    # order persistence
    App\Service\Order\Handler\OrderStorageHandler:
        tags:
            - { name: 'order_handler', priority: 3 }

    # invoice sending
    App\Service\Order\Handler\InvoiceSenderHandler:
        tags:
            - { name: 'order_handler', priority: 1 }

    App\Service\Order\FeeCalculator\DecoratorOrderFeeCalculator:
        arguments:
            $feeThreshold: '%env(FEE_THRESHOLD)%'
            $feeAmount: '%env(FEE_AMOUNT)%'
